@inherits LayoutComponentBase
@inject IProjectService ProjectService
@inject IAuthenticationService AuthenticationService

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0" Color="Color.Dark">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(e => DrawerToggle())"/>
        <MudText Typo="Typo.h6" Class="px-4">ProMag</MudText>
        <MudSpacer/>
        @if (AuthenticationService.User != null)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" Href="/signout"/>
        }
        else
        {
            <MudIconButton Icon="@Icons.Material.Filled.Login" Color="Color.Inherit" Href="/signin"/>
        }
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Docked" Elevation="1" Class="py-5">
        <NavMenu Projects="Projects"/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pt-16 px-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    // Drawer
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    // Get project list
    private List<ProjectSimplifiedModel> Projects { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        var projects = await ProjectService.GetAllSimplifiedAsync();

        Projects = (List<ProjectSimplifiedModel>) projects;
    }

}